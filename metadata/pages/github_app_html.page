<apex:page showHeader="false" sidebar="false" standardStylesheets="false"
           applyHtmlTag="false" controller="GithubController" docType="html-5.0"
           action="{!onLoad}">
<html>
  <head>
    <meta charset="utf-8"/>
    <meta name="viewport" content="initial-scale=1, maximum-scale=1, user-scalable=no, width=device-width"/>
    <title>Issues</title>

    <link href="{!URLFOR($Resource.github_app_resources, 'lib/ionic/css/ionic.min.css')}" rel="stylesheet"/>
    <link href="{!$Resource.github_style_css}" rel="stylesheet"/>
  </head>
  <body ng-app="issues" animation="slide-left-right-ios7">
    <span ng-cloak="true">
      <ion-nav-bar class="bar-stable nav-title-slide-ios7">
        <ion-nav-back-button class="button-icon icon ion-chevron-left">
          Back
        </ion-nav-back-button>
      </ion-nav-bar>
      <!-- 
        The views will be rendered in the <ion-nav-view> directive below
        Templates are in static resources
      -->
      <ion-nav-view name="issues"></ion-nav-view>
    </span>

    <!-- ionic/angularjs js -->
    <script src="{!URLFOR($Resource.github_app_resources, 'lib/ionic/js/ionic.bundle.min.js')}"></script>

    <!-- other libs -->
    <script src="{!$Resource.underscore}"></script>
    <script src="{!$Resource.github}"></script>
    <script src="{!URLFOR($Resource.github_app_resources, 'lib/moment/moment.min.js')}"></script>
    <script src="{!URLFOR($Resource.github_app_resources, 'lib/angular-moment/angular-moment.min.js')}"></script>
      
    <!-- the app's js -->
    <script src="{!$Resource.github_app_js}"></script>
    <script src="{!$Resource.github_controllers_js}"></script>
    <script src="{!$Resource.github_services_js}"></script>
    <script src="{!$Resource.github_s1_js}"></script>
    <script>
        // Haven't found a more reliable way of doing this
        function getGithubAPI(){
        	return new Github({
                token: "{!accessToken}",
                auth: "oauth"
            }, false);
        }
    
    	// S1 doesn't pass hash on formula field hyperlinks, so use
    	// a query param and set the hash ourselves
    	function getParameterByName(name) {
            name = name.replace(/[\[]/, "\\[").replace(/[\]]/, "\\]");
            var regex = new RegExp("[\\?&]" + name + "=([^&#]*)"),
                results = regex.exec(location.search);
            return results == null ? "" : decodeURIComponent(results[1].replace(/\+/g, " "));
        }
    
        var issueId = getParameterByName('issueId');
        if (issueId) {
	    	window.location.hash = '#/issue?issueId='+issueId+'&viewIssue=true';
        }
    </script>
  </body>
</html>
</apex:page>