<apex:page showHeader="false" sidebar="false" standardStylesheets="false"
           applyHtmlTag="false" standardController="Case" docType="html-5.0"
           extensions="GithubController">
<html>
  <head>
    <meta charset="utf-8"/>
    <meta name="viewport" content="initial-scale=1, maximum-scale=1, user-scalable=no, width=device-width"/>
    <title>Link to Issue</title>

    <link href="{!URLFOR($Resource.github_app_resources, 'lib/ionic/css/ionic.min.css')}" rel="stylesheet"/>
    <link href="{!$Resource.github_style_css}" rel="stylesheet"/>

  </head>
  <body ng-app="issues" animation="slide-left-right-ios7">
    <span ng-cloak="true">
      <ion-nav-bar class="bar-stable nav-title-slide-ios7">
        <ion-nav-back-button class="button-icon icon ion-chevron-left">
          Back
        </ion-nav-back-button>
      </ion-nav-bar>
      <!-- 
        The views will be rendered in the <ion-nav-view> directive below
        Templates are in static resources, referenced in github_app_js
      -->
      <ion-nav-view name="issues"></ion-nav-view>
    </span>
      
    <!-- ionic/angularjs js -->
    <script src="{!URLFOR($Resource.github_app_resources, 'lib/ionic/js/ionic.bundle.min.js')}"></script>

    <!-- other libs -->
    <script src="//code.jquery.com/jquery-1.11.0.min.js"></script>
    <script src="{!$Resource.underscore}"></script>
    <script src="{!$Resource.github}"></script>
    <script src="{!URLFOR($Resource.github_app_resources, 'lib/moment/moment.min.js')}"></script>
    <script src="{!URLFOR($Resource.github_app_resources, 'lib/angular-moment/angular-moment.min.js')}"></script>
    <script src="/canvas/sdk/js/publisher.js"></script>
      
    <!-- the app's js - we reuse the app and controllers from the main 'Issues' page -->
    <script src="{!$Resource.github_app_js}"></script>
    <script src="{!$Resource.github_controllers_js}"></script>
    <script src="{!$Resource.github_services_js}"></script>
    <script src="{!$Resource.github_s1_js}"></script>
    <script>
        // Haven't found a more reliable way of doing this
        function getGithubAPI(){
        	return new Github({
                token: "{!accessToken}",
                auth: "oauth"
            }, false);
        }
    
        var rootScope;
          
        // Wait for DOM to be ready
        window.addEventListener('load', function() {
            // Set up github API here; 
            // inject it and Apex controller data into the AngularJS $rootScope
            rootScope = angular.element(document.body).scope().$root;
            rootScope.caseId      = '{!case.Id}';
            rootScope.caseNumber  = '{!case.CaseNumber}';
            rootScope.linkedIssue = '{!case.GitHub_Issue__c}';
        });
    
        // AngularJS app config needs this - unfortunately, I haven't found a 
        // better way to get it there than a plain old JavaScript variable
        var github_caseNumber = '{!case.CaseNumber}';
                                         
        // When panel is ready...
        Sfdc.canvas.publisher.subscribe({
          name: "publisher.showPanel",
          onData:function(e) {
            // Can always hit submit
            Sfdc.canvas.publisher.publish({
              name:"publisher.setValidForSubmit", 
              payload:"true"
            });
          }
        });
        // When user hits submit..
        Sfdc.canvas.publisher.subscribe({
          name: "publisher.post",
          onData:function(e) {
            // If there's been a change in the linked issue...
            if (rootScope.linkedIssue !== '{!case.GitHub_Issue__c}') {
              // Attach it to the case...
              GithubController.attachIssue('{!Case.Id}', rootScope.linkedIssue, function(result, event){
                if (event.status) {
                  // If all is good, we're done!
                  Sfdc.canvas.publisher.publish({name: "publisher.close",
                    payload:{ refresh:"true"}});
                } else {
                  // Oops!
                  alert(event.message);
                }
              });
            } else {
              // No change - we're done
              Sfdc.canvas.publisher.publish({name: "publisher.close",
                  payload:{ refresh:"false"}});
            }
          }
        });
    </script>
  </body>
</html>    
</apex:page>